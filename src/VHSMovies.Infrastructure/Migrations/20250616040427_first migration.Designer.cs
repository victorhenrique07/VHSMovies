// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using VHSMovies.Infraestructure;

#nullable disable

namespace VHSMovies.Infrastructure.Migrations
{
    [DbContext(typeof(DbContextClass))]
    [Migration("20250616040427_first migration")]
    partial class firstmigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("VHSMovies.Domain.Domain.Entity.Cast", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("PersonId")
                        .HasColumnType("integer");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.Property<int>("TitleId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("PersonId");

                    b.HasIndex("TitleId");

                    b.ToTable("casts", (string)null);
                });

            modelBuilder.Entity("VHSMovies.Domain.Domain.Entity.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("genres", (string)null);
                });

            modelBuilder.Entity("VHSMovies.Domain.Domain.Entity.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BirthYear")
                        .HasColumnType("integer");

                    b.Property<int>("DeathYear")
                        .HasColumnType("integer");

                    b.Property<string>("IMDB_Id")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("people", (string)null);
                });

            modelBuilder.Entity("VHSMovies.Domain.Domain.Entity.RecommendedTitle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("AverageRating")
                        .HasColumnType("numeric");

                    b.PrimitiveCollection<string[]>("Genres")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<string>("IMDB_Id")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("ReleaseDate")
                        .HasColumnType("integer");

                    b.Property<decimal>("Relevance")
                        .HasColumnType("numeric");

                    b.Property<int>("TotalReviews")
                        .HasColumnType("integer");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("recommended_titles", (string)null);
                });

            modelBuilder.Entity("VHSMovies.Domain.Domain.Entity.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Rating")
                        .HasColumnType("numeric");

                    b.Property<int>("ReviewCount")
                        .HasColumnType("integer");

                    b.Property<string>("Reviewer")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TitleExternalId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TitleId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TitleId");

                    b.ToTable("reviews", (string)null);
                });

            modelBuilder.Entity("VHSMovies.Domain.Domain.Entity.Title", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("IMDB_Id")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("ReleaseDate")
                        .HasColumnType("integer");

                    b.Property<decimal>("Relevance")
                        .HasColumnType("numeric(5,2)");

                    b.Property<int>("Runtime")
                        .HasColumnType("integer");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("titles", (string)null);
                });

            modelBuilder.Entity("VHSMovies.Domain.Domain.Entity.TitleGenre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("GenreId")
                        .HasColumnType("integer");

                    b.Property<int>("TitleId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("GenreId");

                    b.HasIndex("TitleId");

                    b.ToTable("titles_genres", (string)null);
                });

            modelBuilder.Entity("VHSMovies.Domain.Domain.Entity.Cast", b =>
                {
                    b.HasOne("VHSMovies.Domain.Domain.Entity.Person", "Person")
                        .WithMany("Titles")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VHSMovies.Domain.Domain.Entity.Title", "Title")
                        .WithMany("Casts")
                        .HasForeignKey("TitleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");

                    b.Navigation("Title");
                });

            modelBuilder.Entity("VHSMovies.Domain.Domain.Entity.Review", b =>
                {
                    b.HasOne("VHSMovies.Domain.Domain.Entity.Title", "Title")
                        .WithMany("Ratings")
                        .HasForeignKey("TitleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Title");
                });

            modelBuilder.Entity("VHSMovies.Domain.Domain.Entity.TitleGenre", b =>
                {
                    b.HasOne("VHSMovies.Domain.Domain.Entity.Genre", "Genre")
                        .WithMany("Titles")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VHSMovies.Domain.Domain.Entity.Title", "Title")
                        .WithMany("Genres")
                        .HasForeignKey("TitleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");

                    b.Navigation("Title");
                });

            modelBuilder.Entity("VHSMovies.Domain.Domain.Entity.Genre", b =>
                {
                    b.Navigation("Titles");
                });

            modelBuilder.Entity("VHSMovies.Domain.Domain.Entity.Person", b =>
                {
                    b.Navigation("Titles");
                });

            modelBuilder.Entity("VHSMovies.Domain.Domain.Entity.Title", b =>
                {
                    b.Navigation("Casts");

                    b.Navigation("Genres");

                    b.Navigation("Ratings");
                });
#pragma warning restore 612, 618
        }
    }
}
